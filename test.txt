
> datetripper@0.0.0 test /hddb/git/datetripper
> mocha --exit



  First page
::ffff:127.0.0.1 - - [22/Feb/2018:15:25:02 +0000] "GET / HTTP/1.1" 200 5585
    ✓ should display index.html with status 200

  /Destination
Your app is listening on port 8080
    GET /api/destination
::ffff:127.0.0.1 - - [22/Feb/2018:15:25:02 +0000] "GET /api/destination HTTP/1.1" 200 93004
      ✓ should return all the saved dates for every users (65ms)
    GET /api/destination/:userID
      ✓ should return all the saved dates for a designated user
    POST /api/destination/
      ✓ should add date to user's savedLists
res:{ firstName: 'Hoyt',
  lastName: 'Dibbert',
  savedLists: 
   [ { username: 'Zaria',
       title: 'saepe sint voluptatem',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'amet vel hic',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'voluptatem dolores rem',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'quidem cum temporibus',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'saepe aut aut',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'officia sunt ut',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'tenetur asperiores harum',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'earum et et',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'voluptates voluptatum enim',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'facilis sint et',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'autem repellat dolorem',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'ut qui debitis',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'sit nesciunt maxime',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'qui omnis qui',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'voluptatem cupiditate quia',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'quo voluptas officiis',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'est qui adipisci',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'id voluptatem nisi',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'voluptatibus doloremque veritatis',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'autem autem excepturi',
       destinations: [Object] } ],
  _id: 5a8ee0cf284bae0b1737c507,
  username: 'Zaria',
  password: '123456789',
  __v: 0 }
temp: { firstName: 'Hoyt',
  lastName: 'Dibbert',
  savedLists: 
   [ { username: 'Zaria',
       title: 'saepe sint voluptatem',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'amet vel hic',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'voluptatem dolores rem',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'quidem cum temporibus',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'saepe aut aut',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'officia sunt ut',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'tenetur asperiores harum',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'earum et et',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'voluptates voluptatum enim',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'facilis sint et',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'autem repellat dolorem',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'ut qui debitis',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'sit nesciunt maxime',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'qui omnis qui',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'voluptatem cupiditate quia',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'quo voluptas officiis',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'est qui adipisci',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'id voluptatem nisi',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'voluptatibus doloremque veritatis',
       destinations: [Object] },
     { username: 'Zaria',
       title: 'autem autem excepturi',
       destinations: [Object] } ],
  _id: 5a8ee0cf284bae0b1737c507,
  username: 'Zaria',
  password: '123456789',
  __v: 0 }
::ffff:127.0.0.1 - - [22/Feb/2018:15:25:04 +0000] "POST /api/destination/Zaria HTTP/1.1" 400 43
Closing server

{ Error: Bad Request
    at Test.Request.callback (/hddb/git/datetripper/node_modules/superagent/lib/node/index.js:626:17)
    at /hddb/git/datetripper/node_modules/superagent/lib/node/index.js:795:18
    at IncomingMessage.<anonymous> (/hddb/git/datetripper/node_modules/superagent/lib/node/parsers/json.js:16:7)
    at emitNone (events.js:110:20)
    at IncomingMessage.emit (events.js:207:7)
    at endReadableNT (_stream_readable.js:1059:12)
    at _combinedTickCallback (internal/process/next_tick.js:138:11)
    at process._tickCallback (internal/process/next_tick.js:180:9)
  original: null,
  response: 
   Response {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     res: 
      IncomingMessage {
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        upgrade: false,
        url: '',
        method: null,
        statusCode: 400,
        statusMessage: 'Bad Request',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Object],
        text: '{"reason":"A user,Zaria, does not exists."}',
        read: [Function],
        body: [Object] },
     request: 
      Test {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        _agent: false,
        _formData: null,
        method: 'post',
        url: 'http://127.0.0.1:41049/api/destination/Zaria',
        _header: [Object],
        header: [Object],
        writable: true,
        _redirects: 0,
        _maxRedirects: 5,
        cookies: '',
        qs: {},
        qsRaw: [],
        _redirectList: [],
        _streamRequest: false,
        app: [Object],
        _data: [Object],
        req: [Object],
        protocol: 'http:',
        host: '127.0.0.1:41049',
        _callback: [Function],
        _fullfilledPromise: [Object],
        res: [Object],
        _timeout: 0,
        response: [Circular],
        called: true },
     req: 
      ClientRequest {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 514,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Object],
        connection: [Object],
        _header: 'POST /api/destination/Zaria HTTP/1.1\r\nHost: 127.0.0.1:41049\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/2.3.0\r\nContent-Type: application/json\r\nContent-Length: 514\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Object],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/api/destination/Zaria',
        _ended: true,
        res: [Object],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(outHeadersKey)]: [Object] },
     links: {},
     text: '{"reason":"A user,Zaria, does not exists."}',
     body: { reason: 'A user,Zaria, does not exists.' },
     files: undefined,
     buffered: true,
     headers: 
      { 'x-powered-by': 'Express',
        'access-control-allow-origin': '*',
        'access-control-allow-headers': 'Content-Type,Authorization',
        'access-control-allow-methods': 'GET,POST,PUT,PATCH,DELETE',
        'content-type': 'application/json; charset=utf-8',
        'content-length': '43',
        etag: 'W/"2b-MOUACNwv8PmRWMbUafmIiFQf6vk"',
        date: 'Thu, 22 Feb 2018 15:25:04 GMT',
        connection: 'close' },
     header: 
      { 'x-powered-by': 'Express',
        'access-control-allow-origin': '*',
        'access-control-allow-headers': 'Content-Type,Authorization',
        'access-control-allow-methods': 'GET,POST,PUT,PATCH,DELETE',
        'content-type': 'application/json; charset=utf-8',
        'content-length': '43',
        etag: 'W/"2b-MOUACNwv8PmRWMbUafmIiFQf6vk"',
        date: 'Thu, 22 Feb 2018 15:25:04 GMT',
        connection: 'close' },
     statusCode: 400,
     status: 400,
     statusType: 4,
     info: false,
     ok: false,
     redirect: false,
     clientError: true,
     serverError: false,
     error: 
      { Error: cannot POST /api/destination/Zaria (400)
    at Response.toError (/hddb/git/datetripper/node_modules/superagent/lib/node/response.js:106:13)
    at Response._setStatusProperties (/hddb/git/datetripper/node_modules/superagent/lib/node/response.js:183:12)
    at new Response (/hddb/git/datetripper/node_modules/superagent/lib/node/response.js:42:8)
    at Test.Request._emitResponse (/hddb/git/datetripper/node_modules/superagent/lib/node/index.js:659:20)
    at /hddb/git/datetripper/node_modules/superagent/lib/node/index.js:795:38
    at IncomingMessage.<anonymous> (/hddb/git/datetripper/node_modules/superagent/lib/node/parsers/json.js:16:7)
    at emitNone (events.js:110:20)
    at IncomingMessage.emit (events.js:207:7)
    at endReadableNT (_stream_readable.js:1059:12)
    at _combinedTickCallback (internal/process/next_tick.js:138:11)
    at process._tickCallback (internal/process/next_tick.js:180:9)
        status: 400,
        text: '{"reason":"A user,Zaria, does not exists."}',
        method: 'POST',
        path: '/api/destination/Zaria' },
     accepted: false,
     noContent: false,
     badRequest: true,
     unauthorized: false,
     notAcceptable: false,
     forbidden: false,
     notFound: false,
     charset: 'utf-8',
     type: 'application/json',
     setEncoding: [Function: bound ],
     redirects: [] },
  status: 400 }

  4 passing (2s)

